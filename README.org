* Linux Notification Center

A haskell-written notification center for users that like a desktop with style...

** Features

The notification center receives notifications via DBUS (like any
notification daemon) and shows them in the upper right corner of the
screen. The notification (if not specified in the notification
otherwise) will also be shown in the notification center even after
the notification disappeared by itself. The notifications can be
clicked to make them disappear.

Notifications can be replaced by the use of the =replaces-id= feature
of the notification specification.

The notification center can (optionally) show user-specified buttons
in the bottom that can be in two states (highlighted/not highlighted)
and that can run customable shell commands.

** Screenshots

Some applications, notification:
[[file:README.org.img/org_20181125_131724_ZI9o09.jpg]]

Notification Center opened:
[[file:README.org.img/org_20181203_164608_WqFdmO.jpg]]

** Usage

To start it:
#+BEGIN_SRC sh
> deadd-notification-center
#+END_SRC


Toggle between hidden and shown state of the notification center:
#+BEGIN_SRC sh
kill -s USR1 $(pidof deadd-notification-center)
#+END_SRC


Set the state of a user defined button (in this example the first
button, which has =id= 0):
#+BEGIN_SRC sh
# turn highlighting on
notify-send.py a --hint boolean:deadd-notification-center:true int:id:0 boolean:state:true

# turn highlighting off
notify-send.py a --hint boolean:deadd-notification-center:true int:id:0 boolean:state:false
#+END_SRC
This snippet uses [[https://github.com/phuhl/notify-send.py][notify-send.py]], a improved version of libnotify
(notify-send).

** Install

Install from the AUR for Arch: [[https://aur.archlinux.org/packages/deadd-notification-center/][deadd-notification-center]]

*OR*

Dependencies:
- [[https://www.archlinux.org/packages/community/x86_64/stack/][stack]]
- cairo
- pango
- gobject-introspection
- gtk3

#+BEGIN_SRC shell-script
make
sudo make install
#+END_SRC

** Configuration

No configuration is necessary, the notification center comes with
sensible defaultsâ„¢.

Nearly all colors and many sizes are customizable, as well well as the
default timeout for notifications and the optional buttons in the
notification center. Below are possible configurable options shown.
The configuration file must be located at
=~/.config/deadd/deadd.conf=.

#+BEGIN_EXAMPLE
[notification-center]
marginTop = 0
width = 500
monitor = 0
# optional command to run at startup (e.g. to setup button states)
startupCommand = "deadd-notification-center-startup"
newFirst = true
# If true, the transient field in notifications will be ignored and the
# notification will be persisted in the notifiction center anyways
ignoreTransient = false

# See section "Notification based scripting" for an explenation
match = "title=Abc;body=abc":"app=notify-send"
modify = "transient=false"
run = "":"killall notify-send"

[notification-center-notification-popup]
notiDefaultTimeout = 10000
distanceTop = 50
distanceRight = 50
distanceBetween = 20
width = 300
monitor = 0

[colors]
background = rgba(29, 27, 20, 0.6)
notiBackground = rgba(9, 0, 0, 0.5)
notiColor = #fef3f6
critical = rgba(255, 0, 50, 0.5)
criticalColor = #FFF
criticalInCenter = rgba(155, 0, 20, 0.5)
criticalInCenterColor = #FFF
buttonColor = #eae2e0
buttonHover = rgba(0, 20, 20, 0.2)
buttonHoverColor = #fee
buttonBackground = transparent
labelColor = #eae2e0

[buttons]
buttonsPerRow = 5
buttonHeight = 60
buttonMargin = 2
labels = "VPN":"Bluetooth":"Wifi":"Screensaver"
commands = "sudo vpnToggle":"bluetoothToggle":"wifiToggle":"screensaverToggle"
buttonColor = #fee
buttonBackground = rgba(255, 255, 255, 0.15)
buttonHover = rgba(0, 20, 20, 0.2)
buttonHoverColor = #fee
buttonTextSize = 12px;

buttonState1 = rgba(255,255,255,0.5)
buttonState1Color = #fff
buttonState1Hover = rgba(0, 20, 20, 0.4)
buttonState1HoverColor = #fee
buttonState2 = rgba(255,255,255,0.3)
buttonState2Color = #fff
buttonState2Hover = rgba(0, 20, 20, 0.3)
buttonState2HoverColor = #fee
#+END_EXAMPLE

** See also

Also take a look at my [[https://github.com/phuhl/notify-send.py][notify-send.py]] which imitates notify-send (libnotify) but also is able to replace notifications.

* Todos

** TODO Image support

** DONE Color configurable (DONE)

- [X] done

** DONE Sizes configurable
:LOGBOOK:
CLOCK: [2018-11-22 Thu 20:48]--[2018-11-22 Thu 21:05] =>  0:17
:END:

- [X] Window dimensions for all windows

** DONE Buttons at bottom (DONE)
:LOGBOOK:
CLOCK: [2018-11-23 Fri 14:27]--[2018-11-23 Fri 15:48] =>  1:21
CLOCK: [2018-11-23 Fri 00:33]--[2018-11-23 Fri 02:30] =>  1:57
CLOCK: [2018-11-22 Thu 23:33]--[2018-11-23 Fri 00:11] =>  0:38
:END:

- In the configuration one could specify button-captions and
  shell-commands
- The buttons could be generated dynamically 


- [X] Problem: all commands are executed simultaneously... solved
- [X] Problem 2: to many buttons overlap to the right

** DONE Buttons with info-updates (DONE)
:LOGBOOK:
CLOCK: [2018-11-23 Fri 18:46]--[2018-11-23 Fri 20:24] =>  1:38
CLOCK: [2018-11-23 Fri 16:01]--[2018-11-23 Fri 18:01] =>  2:00
:END:

- [X] Problem: i don't know if multiple hints per noti are possible... yes they are

** DONE Sort notis by time with newest on top (DONE)
:LOGBOOK:
CLOCK: [2019-01-19 Sat 22:36]--[2019-01-19 Sat 22:54] =>  0:18
CLOCK: [2019-01-19 Sat 22:10]--[2019-01-19 Sat 22:34] =>  0:24
:END:

** TODO Multiple Screen support
:LOGBOOK:
CLOCK: [2019-01-02 Wed 02:04]--[2019-01-02 Wed 03:14] =>  1:10
:END:
** DONE More styling (DONE)
:LOGBOOK:
CLOCK: [2019-01-19 Sat 23:02]--[2019-01-19 Sat 23:49] =>  0:47
:END:

In the file =.config/gtk-3.0/gtk.css= you can add styles that will
effect the notification center.

The following class-names for labels are defined:
- Notifications:
  - =label.deadd-noti-center.notification.appname=
  - =label.deadd-noti-center.notification.body=
  - =label.deadd-noti-center.notification.title=
- Notifications in the notification center:
  - =label.deadd-noti-center.in-center.appname=
  - =label.deadd-noti-center.in-center.body=
  - =label.deadd-noti-center.in-center.title=
  - =label.deadd-noti-center.in-center.time=
- Notification-center:
  - =label.deadd-noti-center.noti-center.time=
  - =label.deadd-noti-center.noti-center.date=

_Examples:_

#+CAPTION: Remove appname from notifications
#+BEGIN_SRC css
label.deadd-noti-center.notification.appname,
label.deadd-noti-center.in-center.appname {
    opacity: 0
}
#+END_SRC


#+CAPTION: Change font
#+BEGIN_SRC css
.deadd-noti-center {
    font-family: monospace;
}
#+END_SRC
* Issues
** TODO Aur does not build (#4)
:LOGBOOK:
CLOCK: [2019-01-24 Thu 14:31]--[2019-01-24 Thu 14:42] =>  0:11
CLOCK: [2019-01-24 Thu 13:04]--[2019-01-24 Thu 14:04] =>  1:00
:END:

** DONE Notifications stuck (#5, CLOSED)
:LOGBOOK:
CLOCK: [2019-02-11 Mon 22:54]--[2019-02-11 Mon 23:05] =>  0:11
CLOCK: [2019-02-11 Mon 22:29]--[2019-02-11 Mon 22:44] =>  0:15
CLOCK: [2019-02-11 Mon 21:13]--[2019-02-11 Mon 22:29] =>  1:16
:END:

1. fixed race condition
2. created new bug (replaceid does not work anymore)
3. Easy fix (a + 1 to much)...

** DONE Transient Notifications (#6)
:LOGBOOK:
CLOCK: [2019-03-01 Fri 19:27]--[2019-03-01 Fri 19:38] =>  0:11
:END:

- =ignoreTransient= configuration added

If you want to send transient notifications (notifications that should
not be stored in the notification center, but only showed once)
yourself, you can do so with notify-send:

#+BEGIN_SRC sh
notify-send --hint=int:transient:1 "My Caption" "My Body..."
#+END_SRC

** TODO Notification based scripting (#3, #6)
:LOGBOOK:
CLOCK: [2019-03-01 Fri 22:59]
CLOCK: [2019-03-01 Fri 19:39]--[2019-03-01 Fri 22:43] =>  3:04
:END:

You can modify notifications if they match certain criteria. 

_Matching:_

The criteria you can specify are equality for the following parameters:
- title
- body
- app
- time
- icon

You can test a parameter like this: =title=Abc=.
If you want to test for more than one parameter (for all of them to be
true) you can concatenate the criteria with =;= like this:
=title=Abc;body=You can baz yourself=.

_Modifying:_

You can set the following parameters:
- title
- body
- app
- time
- icon (does not do anything, currently)
- transient (value has to be =true= or =false=)

If you want to set more than one parameter you can concatenate them
with =;= like this: =app=Crashmaster 2000;time=4:20=.

_Running Commands:_

Not implemented, yet.

#+BEGIN_EXAMPLE
[notification-center]
match = "title=Abc;body=abc":"app=notify-send"
modify = "transient=false"
run = "":"killall notify-send"
#+END_EXAMPLE
